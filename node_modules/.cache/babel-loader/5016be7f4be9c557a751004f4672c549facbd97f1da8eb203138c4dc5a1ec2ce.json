{"ast":null,"code":"var _jsxFileName = \"/Users/randallrouse/Desktop/CalPal/client/src/components/CalorieCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FoodCard from \"./FoodCard\";\nimport \"./CalorieCounter.css\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrementByAmount, incrementByAmount, incrementByItem, decrementByItem, incrementByItemCal, increment } from '../counterSlice';\nimport { ItemList } from \"./ItemList\";\nimport ingredients from \"../constants/ingredients\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalorieCounter = props => {\n  _s();\n  const [calories, setCalories] = useState(0);\n  const [grams, setGrams] = useState();\n  const [food, setFood] = useState(\"air\");\n  const [foods, setFoods] = useState([]);\n  const [calPerItem] = useState([0]);\n  // const [ingredient, setIngredient] = useState({\n  //     name: '',\n  //     caloriesPerGram: ''\n  // })\n  const [servingSize] = useState(4);\n\n  // const getAllFoods = async (food) => {\n  //     const response = await axios.get(`http://localhost:3001/api/foods`)\n  //         .then(response => setFoods(response.data))\n  // }\n  // const postFood = async (ingredient) => {\n  //     const newFood = { ...ingredient }\n  //     const response = await axios.post(`http://localhost:3001/api/foods`, newFood)\n  //         .then(response => console.log(\"posted!\"))\n  // }\n\n  useEffect(() => {\n    // getAllFoods()\n    setFoods(ingredients);\n  }, []);\n  const addItemValue = calories => {\n    calPerItem.push(calories);\n  };\n  foods.sort((a, b) => a.name.localeCompare(b.name));\n  const count = useSelector(state => state.counter.value);\n  const list = useSelector(state => state.counter.ingredients);\n  const itemCalories = useSelector(state => state.counter.itemCal);\n  const transformedCount = +count.toFixed(2);\n  const dispatch = useDispatch();\n  const converter = grams => {\n    const calorie = +(grams * calories).toFixed(2);\n    setCalories(calorie);\n    addItemValue(calorie);\n  };\n  const handleChange = e => {\n    setGrams(e.target.value);\n  };\n  // const handleIngredientsChange = (e) => {\n  //     setIngredient({ ...ingredient, [e.target.name]: e.target.value })\n  //     console.log(ingredient)\n  // }\n\n  const handleSubmit = async e => {\n    grams ? converter(grams) : alert(\"can't eat nothing baby\");\n  };\n  // const handleSubmitFood = e => {\n  //     postFood(ingredient)\n  // }\n  const calorieCount = calPerGram => {\n    setCalories(calPerGram);\n  };\n  const foodName = name => {\n    setFood(name);\n  };\n  const setCaloriesAndIngridients = () => {\n    dispatch(incrementByAmount(calories));\n    dispatch(incrementByItem(food));\n    dispatch(incrementByItemCal(calories));\n    dispatch(increment());\n  };\n  const removeCaloriesAndIngridients = () => {\n    dispatch(decrementByAmount(calories));\n    dispatch(decrementByItem(food));\n  };\n  const message = calories < 2 ? `${calories} calories per gram of ${food}` : `${calories} Calories of ${food}`;\n  const perServing = (count / servingSize).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: foods.map(food => /*#__PURE__*/_jsxDEV(FoodCard, {\n        name: food.name,\n        caloriesPerGram: food.calories,\n        calorieCount: calorieCount,\n        foodName: foodName\n      }, `item-${food.name}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calorie-calculator\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              placeholder: \"number of grams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: handleSubmit,\n                children: \" calculate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"totalCal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            \"aria-label\": \"Increment value\",\n            onClick: setCaloriesAndIngridients,\n            children: \"Add to total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            \"aria-label\": \"Decrement value\",\n            onClick: removeCaloriesAndIngridients,\n            children: \"Remove last item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"infoBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: `${transformedCount} calories in your meal`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 87\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: `${perServing} calories per serving`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: [\"Ingredients List:\", list.map((item, index) => /*#__PURE__*/_jsxDEV(ItemList, {\n            name: item,\n            calories: itemCalories[index]\n          }, `item-${item}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CalorieCounter, \"+wPyS2lS1j7CN/yFXr2TIdTBuc8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = CalorieCounter;\nexport default CalorieCounter;\nvar _c;\n$RefreshReg$(_c, \"CalorieCounter\");","map":{"version":3,"names":["React","useState","useEffect","FoodCard","useSelector","useDispatch","decrementByAmount","incrementByAmount","incrementByItem","decrementByItem","incrementByItemCal","increment","ItemList","ingredients","jsxDEV","_jsxDEV","Fragment","_Fragment","CalorieCounter","props","_s","calories","setCalories","grams","setGrams","food","setFood","foods","setFoods","calPerItem","servingSize","addItemValue","push","sort","a","b","name","localeCompare","count","state","counter","value","list","itemCalories","itemCal","transformedCount","toFixed","dispatch","converter","calorie","handleChange","e","target","handleSubmit","alert","calorieCount","calPerGram","foodName","setCaloriesAndIngridients","removeCaloriesAndIngridients","message","perServing","children","className","map","caloriesPerGram","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","type","onClick","item","index","_c","$RefreshReg$"],"sources":["/Users/randallrouse/Desktop/CalPal/client/src/components/CalorieCounter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FoodCard from \"./FoodCard\";\nimport \"./CalorieCounter.css\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport { decrementByAmount, incrementByAmount, incrementByItem, decrementByItem, incrementByItemCal, increment } from '../counterSlice'\nimport { ItemList } from \"./ItemList\";\nimport ingredients from \"../constants/ingredients\";\n\n\n\nconst CalorieCounter = props => {\n    const [calories, setCalories] = useState(0)\n    const [grams, setGrams] = useState()\n    const [food, setFood] = useState(\"air\")\n    const [foods, setFoods] = useState([])\n    const [calPerItem, ] = useState([0])\n    // const [ingredient, setIngredient] = useState({\n    //     name: '',\n    //     caloriesPerGram: ''\n    // })\n    const [servingSize, ] = useState(4)\n\n    // const getAllFoods = async (food) => {\n    //     const response = await axios.get(`http://localhost:3001/api/foods`)\n    //         .then(response => setFoods(response.data))\n    // }\n    // const postFood = async (ingredient) => {\n    //     const newFood = { ...ingredient }\n    //     const response = await axios.post(`http://localhost:3001/api/foods`, newFood)\n    //         .then(response => console.log(\"posted!\"))\n    // }\n\n    useEffect(() => {\n        // getAllFoods()\n        setFoods(ingredients)\n    }, [])\n    const addItemValue = calories => {\n        calPerItem.push(calories)\n    }\n    foods.sort((a, b) => a.name.localeCompare(b.name))\n\n    const count = useSelector((state) => state.counter.value)\n    const list = useSelector((state) => state.counter.ingredients)\n    const itemCalories = useSelector((state) => state.counter.itemCal)\n\n    const transformedCount = + ((count).toFixed(2))\n    const dispatch = useDispatch()\n\n\n    const converter = (grams) => {\n        const calorie = + ((grams * calories).toFixed(2))\n        setCalories(calorie)\n        addItemValue(calorie)\n\n    }\n    const handleChange = (e) => {\n        setGrams(e.target.value)\n    }\n    // const handleIngredientsChange = (e) => {\n    //     setIngredient({ ...ingredient, [e.target.name]: e.target.value })\n    //     console.log(ingredient)\n    // }\n\n    const handleSubmit = async (e) => {\n        grams ?\n            converter(grams) : alert(\"can't eat nothing baby\")\n    }\n    // const handleSubmitFood = e => {\n    //     postFood(ingredient)\n    // }\n    const calorieCount = (calPerGram) => {\n        setCalories(calPerGram)\n    }\n    const foodName = (name) => {\n        setFood(name)\n    }\n    const setCaloriesAndIngridients = () => {\n        dispatch(incrementByAmount(calories))\n        dispatch(incrementByItem(food))\n        dispatch(incrementByItemCal(calories))\n        dispatch(increment())\n    }\n    const removeCaloriesAndIngridients = () => {\n        dispatch(decrementByAmount(calories))\n        dispatch(decrementByItem(food))\n    }\n    const message = calories < 2 ? `${calories} calories per gram of ${food}` :\n        `${calories} Calories of ${food}`\n\n    const perServing = ((count / servingSize).toFixed(2))\n\n    return (\n        <>\n            <div className=\"card-grid\">\n                {foods.map((food) => (\n                    <FoodCard\n                        name={food.name}\n                        caloriesPerGram={food.calories}\n                        calorieCount={calorieCount}\n                        foodName={foodName}\n                        key={`item-${food.name}`}\n                    />\n                ))}\n            </div>\n            <div className=\"input\">\n                <div>\n                    <div className=\"inputs\">\n                        <div className=\"calorie-calculator\">\n                            <input onChange={handleChange} placeholder={\"number of grams\"}></input>\n                            <div>\n                                <button type={\"submit\"} onClick={handleSubmit} > calculate</button>\n                            </div>\n                            {message}\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"info\">\n                    <div className=\"totalCal\">\n                        <button\n                            aria-label=\"Increment value\"\n                            onClick={setCaloriesAndIngridients}\n                        >\n                            Add to total\n                        </button>\n                        <button\n                            aria-label=\"Decrement value\"\n                            onClick={removeCaloriesAndIngridients}\n                        >\n                            Remove last item\n                        </button>\n                        <div className=\"infoBox\">\n                            <span>{`${transformedCount} calories in your meal`}</span><br />\n                            <span>{`${perServing} calories per serving`}</span><br />\n                        </div>\n\n                    </div>\n                    <div className=\"list\">\n                        Ingredients List:\n                        {list.map((item, index) => (\n                            <ItemList name={item} calories={itemCalories[index]} key={`item-${item}`} />\n                        ))}</div>\n                </div>\n            </div>\n            {/* <div className=\"datbase-ui-input\">\n                <input onChange={handleIngredientsChange}\n                    type='text'\n                    placeholder={\"name\"}\n                    name='name'\n                    value={ingredient.name} />\n                <input onChange={handleIngredientsChange}\n                    value={ingredient.caloriesPerGram}\n                    placeholder={\"calories per 100 gram\"}\n                    name=\"caloriesPerGram\"\n                    type=\"integer\"\n                />\n                <button onClick={handleSubmitFood}>Add ingredient to database</button>\n            </div> */}\n\n        </>\n    )\n}\n\n\nexport default CalorieCounter"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}